{"version":3,"sources":["components/Example.js","components/Navbar.js","components/About.js","components/Utils.js","components/Guage.js","components/ListTopSensors.js","components/AddSensor.js","components/Marker.js","components/GMap.js","components/ListSensors.js","components/SiteFooter.js","components/OverrideResponder.js","aws-exports.js","components/AppSyncSensor.js","components/AppSyncSensorDos.js","components/App.js","serviceWorker.js","index.js"],"names":["ModalComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","modal","toggle","bind","assertThisInitialized","setState","react_default","a","createElement","Fragment","Button","className","onClick","index_esm","Modal","isOpen","ModalHeader","ModalBody","networkDataAddress","contractName","yourAccount","networkID","blockNumber","ModalFooter","color","React","Component","Navbar","console","log","href","rel","role","id","account","Example_ModalComponent","About","class","contractStateMap","0","1","2","3","responderStateMap","4","getRandomInt","min","max","Math","ceil","floor","random","Guage","Alert","variant","Container","fluid","Row","Col","lg","xs","dist_default","nrOfLevels","percent","needleColor","textColor","formatTextValue","value","theInput","contractState","animDelay","responderState","colors","ListSensorsNarrow","scope","weather_icons_react","size","sensors","map","sensor","key","name","AddSensor","onSubmit","event","preventDefault","sensorName","lat","sensorLat","lon","sensorLon","endpoint","sensorEndpoint","createSensor","type","ref","input","placeholder","required","Marker","style","backgroundColor","cursor","border","title","SimpleMap","process","GOOGLE_MAP_API_KEY","height","width","lib_default","bootstrapURLKeys","defaultCenter","center","defaultZoom","zoom","mapTypeId","options","getMapOptions","components_Marker","lng","defaultProps","ListSensors","toString","owner","SiteFooter","date","Date","teamMembers","socialLinks","react_social_icons","url","label","boi","link","OverrideResponder","newInt","setResponderState","awsmobile","aws_project_region","aws_appsync_graphqlEndpoint","aws_appsync_region","aws_appsync_authenticationType","aws_appsync_apiKey","Amplify","configure","aws_exports","JSON","stringify","AppSyncSensor","temp","smoke","timestamp","display","handleChange","subscription","API","graphql","graphqlOperation","subscribe","next","data","_this2","onUpdateSensor","target","AppSyncSensorDos","App","sensorCount","loading","smokeThreshold","tempThreshold","smokeThresholdBreached","temperatureThresholdBreached","networkId","mapCenter","loadWeb3","loadBlockchainData","window","ethereum","web3","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkData","Lassie","networks","getBlockNumber","lassie","Contract","abi","address","methods","i","concat","toConsumableArray","send","from","once","receipt","_this3","components_Navbar","components_About","components_Guage","GMap","ListTopSensors","slice","reverse","components_AddSensor","components_ListSensors","components_SiteFooter","components_OverrideResponder","components_AppSyncSensor","components_AppSyncSensorDos","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a1f4410a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { FaNetworkWired } from \"react-icons/fa\";\nexport default class ModalComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { modal: false };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <Button className=\"btn-sm btn-outline-light\" onClick={this.toggle}>\n          <FaNetworkWired />\n        </Button>\n\n        <Modal isOpen={this.state.modal}>\n          <ModalHeader>Ethereum Network Details</ModalHeader>\n          <ModalBody>\n            <b>Contract Address:</b>\n            <br />\n            {this.props.networkDataAddress}\n            <br />\n            <br />\n\n            <b>Contract Name:</b>\n            <br />\n            {this.props.contractName}\n            <br />\n            <br />\n\n            <b> Your Active Address:</b>\n            <br />\n            {this.props.yourAccount}\n            <br />\n            <br />\n            <b> Netwrok ID:</b>\n            <br />\n            {this.props.networkID}\n            <br />\n            <br />\n            <b> Current Block Number:</b>\n            <br />\n            {this.props.blockNumber}\n            <br />\n            <br />\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"danger\" onClick={this.toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  }\n}\n\n// <div>\n// <h1>React Bootstrap Modal Example</h1>\n// <Button color=\"success\" onClick={this.toggle}>React Modal</Button>\n// <Modal isOpen={this.state.modal}>\n// <form onSubmit={this.handleSubmit}>\n// <ModalHeader>IPL 2018</ModalHeader>\n// <ModalBody>\n// <div className=\"row\">\n//   <div className=\"form-group col-md-4\">\n//   <label>Name:</label>\n//   <input type=\"text\" value={this.state.name} onChange={this.handleChangeName} className=\"form-control\" />\n//     </div>\n//     </div>\n//   <div className=\"row\">\n//    <div className=\"form-group col-md-4\">\n//   <label>Team:</label>\n//       <input type=\"text\" value={this.state.team} onChange={this.handleChangeTeam} className=\"form-control\" />\n//      </div>\n//     </div>\n//   <div className=\"row\">\n//    <div className=\"form-group col-md-4\">\n//     <label>Country:</label>\n//       <input type=\"text\" value={this.country} onChange={this.handleChangeCountry} className=\"form-control\" />\n//      </div>\n//     </div>\n// </ModalBody>\n// <ModalFooter>\n//   <input type=\"submit\" value=\"Submit\" color=\"primary\" className=\"btn btn-primary\" />\n//   <Button color=\"danger\" onClick={this.toggle}>Cancel</Button>\n// </ModalFooter>\n// </form>\n// </Modal>\n// </div>\n\n{\n  /* <Button color=\"success\" onClick={this.toggle}>\n          React Modal\n        </Button>\n\n        <Modal isOpen={this.state.modal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Modal heading</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n          <Modal.Footer>\n            <Button color=\"danger\" onClick={this.toggle}>\n              Cancel\n            </Button>\n          </Modal.Footer>\n        </Modal> */\n}\n","import React, { Component } from \"react\";\nimport Example from \"./Example\";\nimport { FaRegUserCircle } from \"react-icons/fa\";\n\n// Thank you https://appdividend.com/2018/03/30/react-bootstrap-modal-example-tutorial/\nclass Navbar extends Component {\n  render() {\n    console.log(this.props);\n    const networkDataAddress = this.props.networkDataAddress;\n\n    return (\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n        <a\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n          href=\"/\"\n          rel=\"noopener noreferrer\"\n        >\n          <span role=\"img\"> 🔥 </span> Lassie Disaster Response\n        </a>\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n            <span className=\"text-white\">\n              <span id=\"account\">\n                <FaRegUserCircle /> &nbsp;\n                <small>{this.props.account}</small>\n              </span>\n            </span>\n            &nbsp; &nbsp; &nbsp;\n            <Example\n              networkDataAddress={networkDataAddress}\n              yourAccount={this.props.account}\n              contractName={this.props.contractName}\n              networkID={this.props.networkID}\n              blockNumber={this.props.blockNumber}\n            />\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\n\nclass About extends Component {\n  render() {\n    return (\n      <div class=\"px-3 py-3 pt-md-5 pb-md-4 mx-auto \">\n        <h1>\n          Wild Fire Smart Contract &nbsp;\n          <small class=\".font-weight-normal\">\n            <small>\n              <small>\n                between the State of California &amp; Fire Defense Co.\n              </small>\n            </small>\n          </small>\n        </h1>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","// uint8 public contractState;  // 1 = OK    2 = WARNING   3 = CRITICAL\n// uint8 public responderState; // 1 = OK    2 = PREPPED    3 = RESPOND\n\nconst contractStateMap = {\n  0: \"Retainer Funded\",\n  1: \"Retainer Funded\",\n  2: \"Escrow Funded\",\n  3: \"CRITICAL, DEPLOY!\"\n};\n\nconst responderStateMap = {\n  0: \"On Retainer\",\n  1: \"On Retainer\",\n  2: \"Preparing to Respond\",\n  3: \"RESPONDING\",\n  4: \"COMPLETE\"\n};\n\nconst thresholdMap = {\n  0: \"Below Threshold\",\n  1: \"Above Threshold\"\n};\n\nexport const contractStateToString = theInput => {\n  return contractStateMap[theInput];\n};\n\nexport const responderStateToString = theInput => {\n  return responderStateMap[theInput];\n};\n\nexport const thresholdToString = theInput => {\n  return thresholdMap[theInput];\n};\n\nexport const getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n};\n","import React, { Component, useEffect, useState } from \"react\";\nimport { Container, Row, Col, Alert, Image } from \"react-bootstrap\";\nimport {\n  contractStateToString,\n  responderStateToString,\n  thresholdToString\n} from \"./Utils\";\n\nimport GaugeChart from \"react-gauge-chart\";\n\nconst chartStyle = {\n  class: \"text-center\"\n};\n\nclass Guage extends Component {\n  render() {\n    return (\n      <>\n        {/* <h2>Contract Overview</h2> */}\n        <Alert variant={\"\"}>\n          <Container fluid>\n            <Row>\n              <Col lg={6}>\n                <h3 class=\"text-center\">Contract Parties</h3>\n              </Col>\n              <Col lg={6} class=\"text-center\">\n                <h3 class=\"text-center\">Contract Variables</h3>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={12} lg={3}>\n                <h5 class=\"text-center\">Lassie Insurance Status</h5>\n                <GaugeChart\n                  id=\"gauge-chart1\"\n                  nrOfLevels={3}\n                  percent={0.15}\n                  needleColor=\"#345243\"\n                  textColor=\"black\"\n                  formatTextValue={value =>\n                    contractStateToString(this.props.contractState)\n                  }\n                  animDelay={6700}\n                />\n              </Col>\n              <Col xs={12} lg={3}>\n                <h5 class=\"text-center\">Fire Defense Co. Status</h5>\n                <GaugeChart\n                  id=\"gauge-chart2\"\n                  nrOfLevels={3}\n                  percent={0.15}\n                  needleColor=\"#345243\"\n                  textColor=\"black\"\n                  formatTextValue={value =>\n                    responderStateToString(this.props.responderState)\n                  }\n                  animDelay={8000}\n                />\n              </Col>\n\n              <Col xs={12} lg={3}>\n                <h5 class=\"text-center\">Smoke Threshold</h5>\n                <GaugeChart\n                  id=\"gauge-chart3\"\n                  percent={0.1}\n                  colors={[\"#5BE12C\", \"#F5CD19\", \"#EA4228\"]}\n                  nrOfLevels={2}\n                  textColor=\"black\"\n                  formatTextValue={value => \"Below Threshold\"}\n                  animDelay={5000}\n                />\n              </Col>\n\n              <Col xs={12} lg={3}>\n                <h5 class=\"text-center\">Temperature Threshold</h5>\n                <GaugeChart\n                  id=\"gauge-chart4\"\n                  nrOfLevels={2}\n                  percent={0.15}\n                  needleColor=\"#345243\"\n                  colors={[\"#5BE12C\", \"#F5CD19\", \"#EA4228\"]}\n                  textColor=\"black\"\n                  formatTextValue={value => \"Below Threshold\"}\n                  animDelay={3000}\n                />\n              </Col>\n            </Row>\n          </Container>\n        </Alert>\n      </>\n    );\n  }\n}\n\nexport default Guage;\n","import React, { Component } from \"react\";\nimport { WiSmoke, WiThermometer } from \"weather-icons-react\";\nimport { getRandomInt } from \"./Utils\";\nclass ListSensorsNarrow extends Component {\n  render() {\n    return (\n      <>\n        <h4>Real-time Readings</h4>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Sensor</th>\n              <th scope=\"col\" className=\"text-center\">\n                <WiSmoke size={50} color=\"#000\" />\n              </th>\n              <th scope=\"col\" className=\"text-center\">\n                <WiThermometer size={50} color=\"#000\" />\n              </th>\n            </tr>\n          </thead>\n          <tbody id=\"sensorList\">\n            {this.props.sensors.map((sensor, key) => {\n              return (\n                <tr key={key}>\n                  <td>{sensor.name}</td>\n                  <td className=\"text-center\">{getRandomInt(5, 8)}</td>\n                  <td className=\"text-center\">{getRandomInt(60, 63)}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n}\n\nexport default ListSensorsNarrow;\n","import React, { Component } from \"react\";\n\nclass AddSensor extends Component {\n  render() {\n    return (\n      <>\n        <h4>Add New Sensor</h4>\n        <form\n          onSubmit={event => {\n            event.preventDefault();\n            const name = this.sensorName.value;\n\n            const lat = this.sensorLat.value;\n            const lon = this.sensorLon.value;\n            const endpoint = this.sensorEndpoint.value;\n            this.props.createSensor(name, lat, lon, endpoint);\n          }}\n        >\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"sensorName\"\n              type=\"text\"\n              ref={input => {\n                this.sensorName = input;\n              }}\n              className=\"form-control\"\n              placeholder=\"Sensor Name\"\n              required\n            />\n          </div>\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"sensorLat\"\n              type=\"text\"\n              ref={input => {\n                this.sensorLat = input;\n              }}\n              className=\"form-control\"\n              placeholder=\"Sensor Latitude\"\n              required\n            />\n          </div>\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"sensorLon\"\n              type=\"text\"\n              ref={input => {\n                this.sensorLon = input;\n              }}\n              className=\"form-control\"\n              placeholder=\"Sensor Longitude\"\n              required\n            />\n          </div>\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"sensorEndpoint\"\n              type=\"text\"\n              ref={input => {\n                this.sensorEndpoint = input;\n              }}\n              className=\"form-control\"\n              placeholder=\"AWS Endpoint\"\n              required\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Add Sensor\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default AddSensor;\n","import React from \"react\";\nimport \"./App.css\";\n\nconst Marker = props => {\n  const { color, name, id } = props;\n  return (\n    <>\n      {\" \"}\n      <div\n        className=\"marker\"\n        style={{\n          backgroundColor: color,\n          cursor: \"pointer\",\n          border: \"2px solid green\"\n        }}\n        title={name}\n      />\n      <div className=\"pt-2 pull-right font-weight-bold marker-text\">\n        &nbsp; <span className=\"alpha-bg\">{name}</span>\n      </div>\n    </>\n  );\n};\n\nexport default Marker;\n","import React, { Component } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport Marker from \"./Marker\";\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\nconst API_KEY = process.env.GOOGLE_MAP_API_KEY;\n\nclass SimpleMap extends Component {\n  static defaultProps = {\n    // center: { // California\n    //   lat: 37.85,\n    //   lng: -120.083333\n    // },\n    center: {\n      // Australia\n      lat: -35.85,\n      lng: 148\n    },\n    zoom: 11\n  };\n\n  //   static getMapOptions = (maps: Maps) => {\n  //     return {\n  //       streetViewControl: false,\n  //       scaleControl: true,\n  //       fullscreenControl: false,\n  //       styles: [\n  //         {\n  //           featureType: \"poi.business\",\n  //           elementType: \"labels\",\n  //           stylers: [\n  //             {\n  //               visibility: \"off\"\n  //             }\n  //           ]\n  //         }\n  //       ],\n  //       gestureHandling: \"greedy\",\n  //       disableDoubleClickZoom: true,\n  //       minZoom: 11,\n  //       maxZoom: 18,\n\n  //       mapTypeControl: true,\n  //       mapTypeId: maps.MapTypeId.SATELLITE,\n  //       mapTypeControlOptions: {\n  //         style: maps.MapTypeControlStyle.HORIZONTAL_BAR,\n  //         position: maps.ControlPosition.BOTTOM_CENTER,\n  //         mapTypeIds: [\n  //           maps.MapTypeId.ROADMAP,\n  //           maps.MapTypeId.SATELLITE,\n  //           maps.MapTypeId.HYBRID\n  //         ]\n  //       },\n\n  //       zoomControl: true,\n  //       clickableIcons: false\n  //     };\n  //   };\n\n  render() {\n    return (\n      // Important! Always set the container height explicitly\n      <div style={{ height: \"450px\", width: \"100%\" }} className=\"\">\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: \"AIzaSyDVu7n8GFMljA8sDPmEC24k-0RIjXFVaVo\" }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n          mapTypeId={\"satellite\"}\n          options={this.getMapOptions}\n        >\n          {this.props.sensors.map((sensor, key) => {\n            return (\n              <Marker\n                lat={sensor.lat}\n                lng={sensor.lon}\n                name={sensor.name}\n                color={\"white\"}\n              />\n            );\n          })}\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\nexport default SimpleMap;\n","import React, { Component } from \"react\";\n\nclass ListSensors extends Component {\n  render() {\n    return (\n      <>\n        <br />\n        <h4 className=\"\">Full Sensor List</h4>\n        <div className=\"scroll-me\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Lat</th>\n                <th scope=\"col\">Lon</th>\n                <th scope=\"col\">IoT Endpoint</th>\n                <th scope=\"col\">Owner</th>\n              </tr>\n            </thead>\n            <tbody id=\"sensorList\">\n              {this.props.sensors.map((sensor, key) => {\n                return (\n                  <tr key={key}>\n                    <th scope=\"row\">{sensor.id.toString()}</th>\n                    <td>{sensor.name}</td>\n                    <td>{sensor.lat}</td>\n                    <td>{sensor.lon}</td>\n                    <td>{sensor.endpoint}</td>\n                    <td>{sensor.owner}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ListSensors;\n","import React, { Component } from \"react\";\nimport { SocialIcon } from \"react-social-icons\";\nimport socialIcon from \"react-social-icons/dist/social-icon\";\n\nclass SiteFooter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      teamMembers: [\n        {\n          name: \"Will Willis\",\n          socialLinks: [\"http://github.com/willwillis\"]\n        },\n        { name: \"Mike Ferber\", socialLinks: [\"https://github.com/2auroras\"] },\n\n        {\n          name: \"Brent McMinn\",\n          socialLinks: [\"https://github.com/brentmcminn\"]\n        }\n      ]\n    };\n  }\n  render() {\n    return (\n      <div className=\"pt-5 my-md-5 pt-md-5 border-top footer\">\n        <div className=\"row\">\n          <div className=\"col-6 col-s\">\n            <h5>About</h5>\n            Lassie Disaster Response is a fictitious company. This website was\n            developed for the 3<sup>rd</sup> and final project during the\n            07/2019{\" \"}\n            <a href=\"https://techbootcamps.rice.edu/fintech/\">\n              FinTech Bootcamp\n            </a>{\" \"}\n            at Rice University.\n            <p>\n              <br />\n              <SocialIcon\n                url={\n                  \"https://github.com/willwillis/Disaster-Insurance-Ethereum-dApp\"\n                }\n                label={\"View this project on github\"}\n              />{\" \"}\n              View the code for this project on Github.\n            </p>\n            <p>\n              <div className=\"d-block mb-3 text-muted\">&copy; 2019-2020</div>\n            </p>\n          </div>\n          <div className=\"col-3 col-s\">\n            <h5>Team Members</h5>\n            <ul className=\"list-unstyled text-small\">\n              {this.state.teamMembers.map((boi, key) => {\n                return (\n                  <li>\n                    {boi.name} &nbsp;\n                    {boi.socialLinks.map((link, key) => {\n                      return (\n                        <>\n                          <SocialIcon\n                            url={link}\n                            style={{ height: 25, width: 25 }}\n                          />{\" \"}\n                          &nbsp;\n                        </>\n                      );\n                    })}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n          <div className=\"col-2 col-s\">\n            <h5>Tech Stack</h5>\n            <ul className=\"list-unstyled text-small\">\n              <li>\n                <a className=\"text-muted\" href=\"https://ethereum.org/\">\n                  Ethereum Blockchain\n                </a>\n              </li>\n              <li>\n                <a\n                  className=\"text-muted\"\n                  href=\"https://solidity.readthedocs.io/en/v0.6.1/\"\n                >\n                  Solidity{\" \"}\n                </a>\n              </li>\n              <li>\n                <a className=\"text-muted\" href=\"https://aws.amazon.com/\">\n                  Amazon Web Services\n                </a>\n              </li>\n              <li>\n                <a className=\"text-muted\" href=\"https://reactjs.org/\">\n                  React\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SiteFooter;\n","import React, { Component } from \"react\";\n\nclass OverrideResponder extends Component {\n  render() {\n    return (\n      <>\n        <h4>Manual Override Responder State</h4>\n        <form\n          onSubmit={event => {\n            event.preventDefault();\n            const newInt = this.responderState.value;\n            console.log(\"new responderstate from form is \" + newInt);\n            this.props.setResponderState(newInt);\n          }}\n        >\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"responderState\"\n              type=\"text\"\n              ref={input => {\n                this.responderState = input;\n              }}\n              className=\"form-control\"\n              placeholder=\"New Responder State\"\n              required\n            />\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Override\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default OverrideResponder;\n","// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n  aws_project_region: \"us-east-1\",\n  aws_appsync_graphqlEndpoint:\n    \"https://vvkmaenj5bctdfr5cwu35lrh44.appsync-api.us-east-1.amazonaws.com/graphql\",\n  aws_appsync_region: \"us-east-1\",\n  // \"aws_appsync_authenticationType\": \"AMAZON_COGNITO_USER_POOLS\",\n  aws_appsync_authenticationType: \"API_KEY\",\n  aws_appsync_apiKey: \"da2-uawuvyc7pfazjldv6smgptkyzu\"\n};\n\nexport default awsmobile;\n","import React, { Component } from \"react\";\nimport { Col } from \"react-bootstrap\";\n\n// import { Logger } from \"aws-amplify\";\n\nimport Amplify from \"@aws-amplify/core\";\nimport \"@aws-amplify/pubsub\";\nimport API, { graphqlOperation, Logger } from \"@aws-amplify/api\";\nimport aws_exports from \"../aws-exports.js\";\nAmplify.configure(aws_exports);\n\nconsole.log(\n  \" @ DEBUG @ aws_exports:\" + JSON.stringify(Amplify.configure(aws_exports))\n);\n\n// const onUpdateSensor = `subscription OnUpdateSensor($id: ID!) {\n//     onUpdateSensor(id: $id) {\n//       id\n//       temp\n//       smoke\n//       lat\n//       long\n//       timestamp\n//     }\n//   }\n//   `;\n\nconst onUpdateSensor = `subscription \nOnUpdateSensor{onUpdateSensor(id: \"Pi4\") \n{id,temp,smoke,lat,long,timestamp}}`;\n\nclass AppSyncSensor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      temp: \"\",\n      smoke: \"\",\n      lat: \"\",\n      lon: \"\",\n      timestamp: \"\",\n      display: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    // this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    console.log(\"@ DEBUG @ I got to componentDidMount.... \");\n    this.subscription = API.graphql(graphqlOperation(onUpdateSensor)).subscribe(\n      {\n        next: event => {\n          console.log(\"@ DEBUG @ I got to subscribe\");\n          if (event) {\n            console.log(\n              \"Subscription: \" + JSON.stringify(event.value.data, null, 2)\n            );\n            this.setState({ display: true });\n            this.setState({\n              temp: event.value.data.onUpdateSensor.temp\n            });\n            this.setState({\n              smoke: event.value.data.onUpdateSensor.smoke\n            });\n          }\n        }\n      }\n    );\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    return (\n      <Col>\n        <h2 className=\"center\">Pi4</h2>\n        <div>Temp: ({this.state.temp})</div>\n        <div>Smoke: ({this.state.smoke})</div>\n      </Col>\n    );\n  }\n}\n\nexport default AppSyncSensor;\n","import React, { Component } from \"react\";\nimport { Col } from \"react-bootstrap\";\n\n// import { Logger } from \"aws-amplify\";\n\nimport Amplify from \"@aws-amplify/core\";\nimport \"@aws-amplify/pubsub\";\nimport API, { graphqlOperation, Logger } from \"@aws-amplify/api\";\nimport aws_exports from \"../aws-exports.js\";\nAmplify.configure(aws_exports);\n\nconsole.log(\n  \" @ DEBUG @ aws_exports:\" + JSON.stringify(Amplify.configure(aws_exports))\n);\n\n// const onUpdateSensor = `subscription OnUpdateSensor($id: ID!) {\n//     onUpdateSensor(id: $id) {\n//       id\n//       temp\n//       smoke\n//       lat\n//       long\n//       timestamp\n//     }\n//   }\n//   `;\n\nconst onUpdateSensor = `subscription \nOnUpdateSensor{onUpdateSensor(id: \"PiZero\") \n{id,temp,smoke,lat,long,timestamp}}`;\n\nclass AppSyncSensorDos extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      temp: \"\",\n      smoke: \"\",\n      lat: \"\",\n      lon: \"\",\n      timestamp: \"\",\n      display: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    // this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    console.log(\"@ DEBUG @ I got to componentDidMount.... \");\n    this.subscription = API.graphql(graphqlOperation(onUpdateSensor)).subscribe(\n      {\n        next: event => {\n          console.log(\"@ DEBUG @ I got to subscribe\");\n          if (event) {\n            console.log(\n              \"Subscription: \" + JSON.stringify(event.value.data, null, 2)\n            );\n            this.setState({ display: true });\n            this.setState({\n              temp: event.value.data.onUpdateSensor.temp\n            });\n            this.setState({\n              smoke: event.value.data.onUpdateSensor.smoke\n            });\n          }\n        }\n      }\n    );\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    return (\n      <Col>\n        <h2 className=\"center\">PiZero</h2>\n        <div>Temp: ({this.state.temp})</div>\n        <div>Smoke: ({this.state.smoke})</div>\n      </Col>\n    );\n  }\n}\n\nexport default AppSyncSensorDos;\n","import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport \"./App.css\";\nimport Lassie from \"../abis/Lassie.json\";\nimport Navbar from \"./Navbar\";\nimport About from \"./About\";\nimport Guage from \"./Guage\";\nimport ListTopSensors from \"./ListTopSensors\";\nimport { Row, Col } from \"react-bootstrap\";\nimport AddSensor from \"./AddSensor\";\nimport GMap from \"./GMap\";\nimport ListSensors from \"./ListSensors\";\nimport SiteFooter from \"./SiteFooter\";\nimport { FaNetworkWired } from \"react-icons/fa\";\nimport OverrideResponder from \"./OverrideResponder\";\nimport AppSyncSensor from \"./AppSyncSensor\";\nimport AppSyncSensorDos from \"./AppSyncSensorDos\"; // refactor || die($!)\n\nclass App extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    // window.alert('loadWeb3')\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    // Load account\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] });\n    const networkId = await web3.eth.net.getId();\n    const networkData = Lassie.networks[networkId];\n    this.setState({ networkID: networkId });\n    const blockNumber = await web3.eth.getBlockNumber();\n    console.log(\"blockNumber: \" + blockNumber);\n    this.setState({ blockNumber });\n    if (networkData) {\n      // window.alert('loadBlockChainData ... networkData is truthy...')\n      const lassie = web3.eth.Contract(Lassie.abi, networkData.address);\n      this.setState({ lassie });\n      const sensorCount = await lassie.methods.sensorCount().call();\n      console.log(sensorCount.toString());\n      this.setState({ sensorCount });\n      for (var i = 1; i <= sensorCount; i++) {\n        const sensor = await lassie.methods.sensors(i).call();\n        this.setState({\n          sensors: [...this.state.sensors, sensor]\n        });\n      }\n      const networkDataAddress = networkData.address;\n      this.setState({ networkDataAddress });\n\n      const contractState = await lassie.methods.contractState().call();\n      this.setState({ contractState });\n\n      const responderState = await lassie.methods.responderState().call();\n      this.setState({ responderState });\n\n      const smokeThresholdBreached = await lassie.methods\n        .smokeThresholdBreached()\n        .call();\n      this.setState({ smokeThresholdBreached });\n\n      const temperatureThresholdBreached = await lassie.methods\n        .temperatureThresholdBreached()\n        .call();\n      this.setState({ temperatureThresholdBreached });\n\n      const name = await lassie.methods.name().call();\n      this.setState({ name });\n\n      console.log(\"Sensors\");\n      console.log(this.state.sensors);\n      console.log(\"contractState\" + this.state.contractState);\n      this.setState({ loading: false });\n    } else {\n      window.alert(\"Lassie contract not deployed to detected network.\");\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      sensorCount: 0,\n      sensors: [],\n      loading: true,\n      blockNumber: \"\",\n      contractState: \"\",\n      responderState: \"\",\n      smokeThreshold: 1,\n      tempThreshold: 150,\n      smokeThresholdBreached: \"\",\n      temperatureThresholdBreached: \"\",\n      name: \"\",\n      networkDataAddress: \"\",\n      networkId: \"\",\n      mapCenter: {\n        lat: -25.2744,\n        lng: 133.7751\n      }\n    };\n\n    this.createSensor = this.createSensor.bind(this);\n    this.setResponderState = this.setResponderState.bind(this);\n  }\n\n  // moved this logic to AddSensor.js COmponent.\n  createSensor(name, lat, lon, endpoint) {\n    this.setState({ loading: true });\n    this.state.lassie.methods\n      .createSensor(name, lat, lon, endpoint)\n      .send({ from: this.state.account })\n      .once(\"receipt\", receipt => {\n        this.setState({ loading: false });\n      });\n  }\n\n  setResponderState(newInt) {\n    this.setState({ loading: true });\n    this.state.lassie.methods\n      .setResponderState(newInt)\n      .send({ from: this.state.account })\n      .once(\"receipt\", receipt => {\n        this.setState({ loading: false });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.loading ? (\n          <div id=\"loader\" className=\"text-center\">\n            <p className=\"text-center align-middle height-100\">\n              <h1 className=\"bigger\">\n                <FaNetworkWired />\n              </h1>\n              <h1>Connecting to Ethereum Network...</h1>\n            </p>\n          </div>\n        ) : (\n          <>\n            <Navbar\n              account={this.state.account}\n              networkDataAddress={this.state.networkDataAddress}\n              contractName={this.state.name}\n              networkID={this.state.networkID}\n              blockNumber={this.state.blockNumber}\n            />\n            <About />\n            <Row>\n              <Col xs={12} lg={9}>\n                <Guage\n                  contractState={this.state.contractState}\n                  responderState={this.state.responderState}\n                  smokeThresholdBreached={this.state.smokeThresholdBreached}\n                  temperatureThresholdBreached={\n                    this.state.temperatureThresholdBreached\n                  }\n                />\n                <GMap\n                  sensors={this.state.sensors}\n                  center={this.state.mapCenter}\n                  zoom={4}\n                />\n              </Col>\n              <Col xs={12} lg={3} className={\"p-3 mb-2 bg-light text-dark\"}>\n                <ListTopSensors\n                  sensors={this.state.sensors.slice(-3).reverse()}\n                />\n                <AddSensor createSensor={this.createSensor} />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                {\" \"}\n                <ListSensors sensors={this.state.sensors} />\n              </Col>\n            </Row>\n            <SiteFooter sensors={this.state.sensors} />\n            <Row>\n              <Col>\n                {\" \"}\n                <OverrideResponder setResponderState={this.setResponderState} />\n              </Col>\n              <Col>\n                <AppSyncSensor sensorName={\"Pi4\"}></AppSyncSensor>\n                <AppSyncSensorDos sensorName={\"PiZero\"}></AppSyncSensorDos>\n              </Col>\n            </Row>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}