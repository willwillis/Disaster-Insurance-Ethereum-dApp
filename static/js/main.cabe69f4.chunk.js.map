{"version":3,"sources":["components/Utils.js","components/Dialog.js","components/Navbar.js","components/About.js","components/Guage.js","aws-exports.js","components/AppSyncSensor.js","components/AppSyncSensorDos.js","components/ListTopSensors.js","components/AddSensor.js","components/Marker.js","components/GMap.js","components/ListSensors.js","components/SiteFooter.js","components/Clock.js","components/OverrideResponder.js","components/ReactiveGuages.js","components/App.js","serviceWorker.js","index.js"],"names":["contractStateMap","0","1","2","3","responderStateMap","4","thresholdMap","false","true","thresholdIndicatorMap","contractStateIndicatorMap","networkMap","5","6","8","10","42","60","77","99","100","31337","401697","7762959","61717561","contractStateToString","theInput","responderStateToString","thresholdToString","thresholdToValue","contractToValue","getRandomInt","min","max","Math","ceil","floor","random","ModalComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","modal","toggle","bind","assertThisInitialized","setState","react_default","a","createElement","Fragment","Button","className","onClick","index_esm","Modal","isOpen","ModalHeader","ModalBody","href","concat","networkDataAddress","contractName","yourAccount","networkID","blockNumber","ModalFooter","color","React","Component","Navbar","console","log","rel","role","id","account","Dialog_ModalComponent","About","class","awsmobile","aws_project_region","aws_appsync_graphqlEndpoint","aws_appsync_region","aws_appsync_authenticationType","aws_appsync_apiKey","Amplify","configure","aws_exports","JSON","stringify","AppSyncSensor","temp","smoke","lat","lon","timestamp","display","handleChange","subscription","API","graphql","graphqlOperation","subscribe","next","event","value","data","_this2","onUpdateSensor","setTemp","setSmoke","target","AppSyncSensorDos","smokeThreshold","tempThreshold","smokeClass","tempClass","threshold","ListSensorsNarrow","scope","weather_icons_react","size","components_AppSyncSensorDos","components_AppSyncSensor","sensors","map","sensor","key","name","AddSensor","onSubmit","preventDefault","sensorName","sensorLat","sensorLon","endpoint","sensorEndpoint","createSensor","type","ref","input","placeholder","required","Marker","style","backgroundColor","cursor","border","title","SimpleMap","process","GOOGLE_MAP_API_KEY","height","width","lib_default","bootstrapURLKeys","defaultCenter","center","defaultZoom","zoom","mapTypeId","options","getMapOptions","components_Marker","lng","defaultProps","ListSensors","toString","owner","SiteFooter","date","Date","teamMembers","socialLinks","react_social_icons","url","label","boi","link","Clock","timerID","setInterval","tick","clearInterval","toLocaleTimeString","ReactDOM","render","Clock_Clock","document","getElementById","ReactiveGuages","sensorCount","loading","contractState","responderState","smokeThresholdBreached","temperatureThresholdBreached","networkId","mapCenter","window","ethereum","web3","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkData","Lassie","networks","getBlockNumber","lassie","Contract","abi","address","methods","i","toConsumableArray","_this3","send","from","once","receipt","location","reload","newInt","_this4","setResponderState","breachedBool","_this5","_this6","setTemperature","loadWeb3","loadBlockchainData","_this7","Alert","variant","Container","fluid","Row","Col","lg","xs","dist_default","nrOfLevels","percent","needleColor","textColor","formatTextValue","animDelay","colors","App","transactionCount","components_Clock","components_Navbar","components_About","components_ReactiveGuages","GMap","ListTopSensors","slice","reverse","components_AddSensor","components_ListSensors","components_SiteFooter","Boolean","hostname","match","src_components_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cabe69f4.chunk.js","sourcesContent":["// uint8 public contractState;  // 1 = OK    2 = WARNING   3 = CRITICAL\n// uint8 public responderState; // 1 = OK    2 = PREPPED    3 = RESPOND\n\nconst contractStateMap = {\n  0: \"Retainer Funded\",\n  1: \"Retainer Funded\",\n  2: \"Escrow Funded\",\n  3: \"CRITICAL, DEPLOY!\"\n};\n\nconst responderStateMap = {\n  0: \"On Retainer\",\n  1: \"On Retainer\",\n  2: \"Preparing to Respond\",\n  3: \"RESPONDING\",\n  4: \"COMPLETE\"\n};\n\nconst thresholdMap = {\n  false: \"Below Threshold\",\n  true: \"Above Threshold\"\n};\n\nconst thresholdIndicatorMap = {\n  false: 0.25,\n  true: 0.75\n};\n\nconst contractStateIndicatorMap = {\n  1: 0.1,\n  2: 0.5,\n  3: 0.8,\n  4: 1\n};\n\nconst networkMap = {\n  0: \"Olympic, Ethereum public pre-release PoW testnet\",\n  1: \"Mainnet\",\n  // 1: \"Frontier, Homestead, Metropolis, the Ethereum public PoW main network\",\n  // 1: \"Classic, the (un)forked public Ethereum Classic PoW main network, chain ID 61\",\n  // 1: \"Expanse, an alternative Ethereum implementation, chain ID 2\",\n  2: \"Morden Classic, the public Ethereum Classic PoW testnet\",\n  3: \"Ropsten, the public cross-client Ethereum PoW testnet\",\n  4: \"Rinkeby, the public Geth-only PoA testnet\",\n  5: \"Goerli, the public cross-client PoA testnet\",\n  6: \"Kotti Classic, the public cross-client PoA testnet for Classic\",\n  8: \"Ubiq, the public Gubiq main network with flux difficulty chain ID 8\",\n  10: \"Quorum, the JP Morgan network\",\n  42: \"Kovan, the public Parity-only PoA testnet\",\n  60: \"GoChain, the GoChain networks mainnet\",\n  77: \"Sokol, the public POA Network testnet\",\n  99: \"Core, the public POA Network main network\",\n  100: \"xDai, the public MakerDAO/POA Network main network\",\n  31337: \"GoChain testnet, the GoChain networks public testnet\",\n  401697: \"Tobalaba, the public Energy Web Foundation testnet\",\n  7762959: \"Musicoin, the music blockchain\",\n  61717561: \"Aquachain, ASIC resistant chain\"\n};\n\nexport const networkIDToString = theInput => {\n  return networkMap[theInput];\n};\n\nexport const contractStateToString = theInput => {\n  return contractStateMap[theInput];\n};\n\nexport const responderStateToString = theInput => {\n  return responderStateMap[theInput];\n};\n\nexport const thresholdToString = theInput => {\n  return thresholdMap[theInput];\n};\n\nexport const thresholdToValue = theInput => {\n  return thresholdIndicatorMap[theInput];\n};\n\nexport const contractToValue = theInput => {\n  return contractStateIndicatorMap[theInput];\n};\n\nexport const getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n};\n","import React from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { FaNetworkWired } from \"react-icons/fa\";\nimport { networkIDToString } from \"./Utils\";\n\nexport default class ModalComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { modal: false };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <Button className=\"btn-sm btn-outline-light\" onClick={this.toggle}>\n          <FaNetworkWired />\n        </Button>\n\n        <Modal isOpen={this.state.modal}>\n          <ModalHeader>Ethereum Network Details</ModalHeader>\n          <ModalBody>\n            <b>Contract Address:</b>\n            <br />\n            <a\n              href={`https://kovan.etherscan.io/address/${this.props.networkDataAddress}`}\n            >\n              {this.props.networkDataAddress}\n            </a>\n            <br />\n            <br />\n            <b>Contract Name:</b>\n            <br />\n            {this.props.contractName}\n            <br />\n            <br />\n            {/* <b>Transaction Count:</b>\n            <br />\n            {this.props.transactionCount}\n            <br />\n            <br /> */}\n            <b> Your Active Address:</b>\n            <br />\n            {this.props.yourAccount}\n            <br />\n            <br />\n            <b> Netwrok ID:</b>\n            <br />({this.props.networkID}){\" \"}\n            {networkIDToString(this.props.networkID)}\n            <br />\n            <br />\n            <b> Current Block Number:</b>\n            <br />\n            <a\n              href={`https://kovan.etherscan.io/block/${this.props.blockNumber}`}\n            >\n              {this.props.blockNumber}\n            </a>\n            <br />\n            <br />\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"danger\" onClick={this.toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  }\n}\n\n// <div>\n// <h1>React Bootstrap Modal Example</h1>\n// <Button color=\"success\" onClick={this.toggle}>React Modal</Button>\n// <Modal isOpen={this.state.modal}>\n// <form onSubmit={this.handleSubmit}>\n// <ModalHeader>IPL 2018</ModalHeader>\n// <ModalBody>\n// <div className=\"row\">\n//   <div className=\"form-group col-md-4\">\n//   <label>Name:</label>\n//   <input type=\"text\" value={this.state.name} onChange={this.handleChangeName} className=\"form-control\" />\n//     </div>\n//     </div>\n//   <div className=\"row\">\n//    <div className=\"form-group col-md-4\">\n//   <label>Team:</label>\n//       <input type=\"text\" value={this.state.team} onChange={this.handleChangeTeam} className=\"form-control\" />\n//      </div>\n//     </div>\n//   <div className=\"row\">\n//    <div className=\"form-group col-md-4\">\n//     <label>Country:</label>\n//       <input type=\"text\" value={this.country} onChange={this.handleChangeCountry} className=\"form-control\" />\n//      </div>\n//     </div>\n// </ModalBody>\n// <ModalFooter>\n//   <input type=\"submit\" value=\"Submit\" color=\"primary\" className=\"btn btn-primary\" />\n//   <Button color=\"danger\" onClick={this.toggle}>Cancel</Button>\n// </ModalFooter>\n// </form>\n// </Modal>\n// </div>\n\n{\n  /* <Button color=\"success\" onClick={this.toggle}>\n          React Modal\n        </Button>\n\n        <Modal isOpen={this.state.modal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Modal heading</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n          <Modal.Footer>\n            <Button color=\"danger\" onClick={this.toggle}>\n              Cancel\n            </Button>\n          </Modal.Footer>\n        </Modal> */\n}\n","import React, { Component } from \"react\";\nimport Dialog from \"./Dialog\";\nimport { FaRegUserCircle } from \"react-icons/fa\";\n\n// Thank you https://appdividend.com/2018/03/30/react-bootstrap-modal-example-tutorial/\nclass Navbar extends Component {\n  render() {\n    console.log(this.props);\n    const networkDataAddress = this.props.networkDataAddress;\n\n    return (\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n        <a\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n          href=\"/\"\n          rel=\"noopener noreferrer\"\n        >\n          <span role=\"img\"> 🔥 </span> Lassie Disaster Response\n        </a>\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n            <span className=\"text-white\">\n              <span id=\"account\">\n                <FaRegUserCircle /> &nbsp;\n                <small>{this.props.account}</small>\n              </span>\n            </span>\n            &nbsp; &nbsp; &nbsp;\n            <Dialog\n              networkDataAddress={networkDataAddress}\n              yourAccount={this.props.account}\n              contractName={this.props.contractName}\n              networkID={this.props.networkID}\n              blockNumber={this.props.blockNumber}\n              //   transactionCount={this.props.transactionCount}\n            />\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\n\nclass About extends Component {\n  render() {\n    return (\n      <div class=\"px-3 py-3 pt-md-5 pb-md-4 mx-auto \">\n        <h1>\n          Wild Fire Smart Contract &nbsp;\n          <small class=\".font-weight-normal\">\n            <small>\n              <small>{this.props.contractName}</small>\n            </small>\n          </small>\n        </h1>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component, useEffect, useState } from \"react\";\nimport { Container, Row, Col, Alert, Image } from \"react-bootstrap\";\nimport {\n  contractStateToString,\n  responderStateToString,\n  thresholdToString,\n  thresholdToValue,\n  contractToValue\n} from \"./Utils\";\n\nimport GaugeChart from \"react-gauge-chart\";\n\nconst chartStyle = {\n  class: \"text-center\"\n};\n\nclass Guage extends Component {\n  render() {\n    return (\n      <>\n        {/* <h2>Contract Overview</h2> */}\n        <Alert variant={\"\"}>\n          <Container fluid>\n            <Row>\n              <Col lg={6}>\n                <h3 class=\"text-center\">Contract Parties</h3>\n              </Col>\n              <Col lg={6} class=\"text-center\">\n                <h3 class=\"text-center\">Contract Variables</h3>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={12} lg={3}>\n                <h5 class=\"text-center\">Lassie Insurance Status</h5>\n                <GaugeChart\n                  id=\"gauge-chart1\"\n                  nrOfLevels={3}\n                  percent={contractToValue(this.props.contractState)}\n                  needleColor=\"#345243\"\n                  textColor=\"black\"\n                  formatTextValue={value =>\n                    contractStateToString(this.props.contractState)\n                  }\n                  animDelay={6700}\n                />\n              </Col>\n              <Col xs={12} lg={3}>\n                <h5 class=\"text-center\">Fire Defense Co. Status</h5>\n                <GaugeChart\n                  id=\"gauge-chart2\"\n                  nrOfLevels={3}\n                  percent={contractToValue(this.props.responderState)}\n                  needleColor=\"#345243\"\n                  textColor=\"black\"\n                  formatTextValue={value =>\n                    responderStateToString(this.props.responderState)\n                  }\n                  animDelay={8000}\n                />\n              </Col>\n\n              <Col xs={12} lg={3}>\n                <h5 class=\"text-center\">Smoke Threshold</h5>\n                <GaugeChart\n                  id=\"gauge-chart3\"\n                  percent={thresholdToValue(this.props.smokeThresholdBreached)}\n                  colors={[\"#5BE12C\", \"#F5CD19\", \"#EA4228\"]}\n                  nrOfLevels={2}\n                  textColor=\"black\"\n                  formatTextValue={value =>\n                    thresholdToString(this.props.smokeThresholdBreached)\n                  }\n                  animDelay={5000}\n                />\n              </Col>\n\n              <Col xs={12} lg={3}>\n                <h5 class=\"text-center\">Temperature Threshold</h5>\n                <GaugeChart\n                  id=\"gauge-chart4\"\n                  nrOfLevels={2}\n                  percent={thresholdToValue(\n                    this.props.temperatureThresholdBreached\n                  )}\n                  needleColor=\"#345243\"\n                  colors={[\"#5BE12C\", \"#F5CD19\", \"#EA4228\"]}\n                  textColor=\"black\"\n                  formatTextValue={value =>\n                    thresholdToString(this.props.temperatureThresholdBreached)\n                  }\n                  animDelay={3000}\n                />\n              </Col>\n            </Row>\n          </Container>\n        </Alert>\n      </>\n    );\n  }\n}\n\nexport default Guage;\n","// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n  aws_project_region: \"us-east-1\",\n  aws_appsync_graphqlEndpoint:\n    \"https://vvkmaenj5bctdfr5cwu35lrh44.appsync-api.us-east-1.amazonaws.com/graphql\",\n  aws_appsync_region: \"us-east-1\",\n  // \"aws_appsync_authenticationType\": \"AMAZON_COGNITO_USER_POOLS\",\n  aws_appsync_authenticationType: \"API_KEY\",\n  aws_appsync_apiKey: \"da2-loqj6sjza5ahhjujfq6n5h2vf4\"\n};\n\nexport default awsmobile;\n","import React, { Component } from \"react\";\nimport { Col } from \"react-bootstrap\";\n// import linkState from \"react-link-state\";\n\n// import { Logger } from \"aws-amplify\";\n\nimport Amplify from \"@aws-amplify/core\";\nimport \"@aws-amplify/pubsub\";\nimport API, { graphqlOperation, Logger } from \"@aws-amplify/api\";\nimport aws_exports from \"../aws-exports.js\";\nAmplify.configure(aws_exports);\n\nconsole.log(\n  \" @ DEBUG @ aws_exports:\" + JSON.stringify(Amplify.configure(aws_exports))\n);\n\n// const onUpdateSensor = `subscription OnUpdateSensor($id: ID!) {\n//     onUpdateSensor(id: $id) {\n//       id\n//       temp\n//       smoke\n//       lat\n//       long\n//       timestamp\n//     }\n//   }\n//   `;\n\nconst onUpdateSensor = `subscription \nOnUpdateSensor{onUpdateSensor(id: \"Pi4\") \n{id,temp,smoke,lat,long,timestamp}}`;\n\nclass AppSyncSensor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      temp: \"\",\n      smoke: \"\",\n      lat: \"\",\n      lon: \"\",\n      timestamp: \"\",\n      display: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    // this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    console.log(\"@ DEBUG @ I got to componentDidMount.... \");\n    this.subscription = API.graphql(graphqlOperation(onUpdateSensor)).subscribe(\n      {\n        next: event => {\n          //   console.log(\"@ DEBUG @ I got to subscribe\");\n          if (event) {\n            console.log(\n              \"Subscription: \" + JSON.stringify(event.value.data, null, 2)\n            );\n            this.setState({ display: true });\n            this.setState({\n              temp: event.value.data.onUpdateSensor.temp\n            });\n            console.log(\n              \"@ DEBUG @ TEMP IS: \" + event.value.data.onUpdateSensor.temp\n            );\n\n            if (event.value.data.onUpdateSensor.temp > 40) {\n              console.log(\"@ DEBUG @ TEMP THRESHOLD BREACHED ----------\");\n              this.props.setTemp(true, \"Pi4\");\n            }\n            this.setState({\n              smoke: event.value.data.onUpdateSensor.smoke\n            });\n            if (event.value.data.onUpdateSensor.smoke > 200) {\n              this.props.setSmoke(true, \"Pi4\");\n              console.log(\"@ DEBUG @ I SMOKE Breached.....\");\n            }\n          }\n        }\n      }\n    );\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    return (\n      <tr className=\"display-4\">\n        <td>Pi 4</td>\n        <td className=\"text-center\">{this.state.smoke}</td>\n        <td className=\"text-center\">{this.state.temp}</td>\n      </tr>\n    );\n  }\n}\n\nexport default AppSyncSensor;\n","import React, { Component } from \"react\";\nimport { Col } from \"react-bootstrap\";\n\n// import { Logger } from \"aws-amplify\";\n\nimport Amplify from \"@aws-amplify/core\";\nimport \"@aws-amplify/pubsub\";\nimport API, { graphqlOperation, Logger } from \"@aws-amplify/api\";\nimport aws_exports from \"../aws-exports.js\";\nAmplify.configure(aws_exports);\n\nconsole.log(\n  \" @ DEBUG @ aws_exports:\" + JSON.stringify(Amplify.configure(aws_exports))\n);\n\n// const onUpdateSensor = `subscription OnUpdateSensor($id: ID!) {\n//     onUpdateSensor(id: $id) {\n//       id\n//       temp\n//       smoke\n//       lat\n//       long\n//       timestamp\n//     }\n//   }\n//   `;\n\nconst onUpdateSensor = `subscription \nOnUpdateSensor{onUpdateSensor(id: \"PiZero\") \n{id,temp,smoke,lat,long,timestamp}}`;\n\nclass AppSyncSensorDos extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      temp: \"\",\n      smoke: \"\",\n      lat: \"\",\n      lon: \"\",\n      timestamp: \"\",\n      display: false,\n      smokeThreshold: 200,\n      tempThreshold: 40,\n      smokeClass: \"\",\n      tempClass: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    // this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  thresholdBreachedClass(value, threshold) {\n    if (threshold > value) {\n      // we've breached\n      return \"alert alert-danger\";\n    } else {\n      return \"\";\n    }\n  }\n\n  async componentDidMount() {\n    console.log(\"@ DEBUG @ I got to componentDidMount.... \");\n    this.subscription = API.graphql(graphqlOperation(onUpdateSensor)).subscribe(\n      {\n        next: event => {\n          //   console.log(\"@ DEBUG @ I got to subscribe\");\n          if (event) {\n            console.log(\n              \"Subscription: \" + JSON.stringify(event.value.data, null, 2)\n            );\n            this.setState({ display: true });\n            this.setState({\n              temp: event.value.data.onUpdateSensor.temp\n            });\n            if (this.temp > this.tempThreshold) {\n              this.state.tempClass = \"text-center alert alert-danger\";\n              this.props.setTemp(true, \"PiZero\");\n            } else {\n              this.state.tempClass = \"text-center\";\n            }\n            this.setState({\n              smoke: event.value.data.onUpdateSensor.smoke\n            });\n            if (event.value.data.onUpdateSensor.smoke > this.smokeThreshold) {\n              this.state.smokeClass = \"text-center alert alert-danger\";\n              this.props.setSmoke(true, \"PiZero\");\n            } else {\n              this.state.smokeClass = \"text-center\";\n            }\n          }\n        }\n      }\n    );\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    return (\n      <tr className=\"display-4\">\n        <td>Pi Zero</td>\n        {\"\"}\n        <td className={this.state.smokeClass}>{this.state.smoke}</td>\n        <td className={this.state.tempClass}>{this.state.temp}</td>\n      </tr>\n    );\n  }\n}\n\nexport default AppSyncSensorDos;\n","import React, { Component } from \"react\";\nimport { WiSmoke, WiThermometer } from \"weather-icons-react\";\nimport { getRandomInt } from \"./Utils\";\nimport AppSyncSensor from \"./AppSyncSensor\";\nimport AppSyncSensorDos from \"./AppSyncSensorDos\";\nclass ListSensorsNarrow extends Component {\n  render() {\n    return (\n      <>\n        <table className=\"table\">\n          <thead>\n            <tr className=\"display-4\">\n              <th scope=\"col\">\n                <h4>Real-time Readings </h4>\n              </th>\n              <th scope=\"col\" className=\"text-center\">\n                <WiSmoke size={50} color=\"#000\" />\n                <h4>Smoke</h4>\n              </th>\n              <th scope=\"col\" className=\"text-center\">\n                <WiThermometer size={50} color=\"#000\" />\n                <h4>Temp.</h4>\n              </th>\n            </tr>\n            <AppSyncSensorDos />\n            <AppSyncSensor />\n          </thead>\n          <tbody id=\"sensorList\">\n            {this.props.sensors.map((sensor, key) => {\n              return (\n                <tr key={key}>\n                  <td>{sensor.name}</td>\n                  {/* smoke  */}\n                  <td className=\"text-center\">{getRandomInt(95, 120)}</td>\n                  <td className=\"text-center\">{getRandomInt(23, 29)}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n}\n\nexport default ListSensorsNarrow;\n","import React, { Component } from \"react\";\n\nclass AddSensor extends Component {\n  render() {\n    return (\n      <>\n        <h4>Add New Sensor</h4>\n        <form\n          onSubmit={event => {\n            event.preventDefault();\n            const name = this.sensorName.value;\n\n            const lat = this.sensorLat.value;\n            const lon = this.sensorLon.value;\n            const endpoint = this.sensorEndpoint.value;\n            this.props.createSensor(name, lat, lon, endpoint);\n          }}\n        >\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"sensorName\"\n              type=\"text\"\n              ref={input => {\n                this.sensorName = input;\n              }}\n              className=\"form-control\"\n              placeholder=\"Sensor Name\"\n              required\n            />\n          </div>\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"sensorLat\"\n              type=\"text\"\n              ref={input => {\n                this.sensorLat = input;\n              }}\n              className=\"form-control\"\n              placeholder=\"Sensor Latitude\"\n              required\n            />\n          </div>\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"sensorLon\"\n              type=\"text\"\n              ref={input => {\n                this.sensorLon = input;\n              }}\n              className=\"form-control\"\n              placeholder=\"Sensor Longitude\"\n              required\n            />\n          </div>\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"sensorEndpoint\"\n              type=\"text\"\n              ref={input => {\n                this.sensorEndpoint = input;\n              }}\n              className=\"form-control\"\n              placeholder=\"AWS Endpoint\"\n              required\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Add Sensor\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default AddSensor;\n","import React from \"react\";\nimport \"./App.css\";\n\nconst Marker = props => {\n  const { color, name, id } = props;\n  return (\n    <>\n      {\" \"}\n      <div\n        className=\"marker\"\n        style={{\n          backgroundColor: color,\n          cursor: \"pointer\",\n          border: \"2px solid green\"\n        }}\n        title={name}\n      />\n      <div className=\"pt-2 pull-right font-weight-bold marker-text\">\n        &nbsp; <span className=\"alpha-bg\">{name}</span>\n      </div>\n    </>\n  );\n};\n\nexport default Marker;\n","import React, { Component } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport Marker from \"./Marker\";\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\nconst API_KEY = process.env.GOOGLE_MAP_API_KEY;\n\nclass SimpleMap extends Component {\n  static defaultProps = {\n    // center: { // California\n    //   lat: 37.85,\n    //   lng: -120.083333\n    // },\n    center: {\n      // Australia\n      lat: -35.85,\n      lng: 148\n    },\n    zoom: 11\n  };\n\n  //   static getMapOptions = (maps: Maps) => {\n  //     return {\n  //       streetViewControl: false,\n  //       scaleControl: true,\n  //       fullscreenControl: false,\n  //       styles: [\n  //         {\n  //           featureType: \"poi.business\",\n  //           elementType: \"labels\",\n  //           stylers: [\n  //             {\n  //               visibility: \"off\"\n  //             }\n  //           ]\n  //         }\n  //       ],\n  //       gestureHandling: \"greedy\",\n  //       disableDoubleClickZoom: true,\n  //       minZoom: 11,\n  //       maxZoom: 18,\n\n  //       mapTypeControl: true,\n  //       mapTypeId: maps.MapTypeId.SATELLITE,\n  //       mapTypeControlOptions: {\n  //         style: maps.MapTypeControlStyle.HORIZONTAL_BAR,\n  //         position: maps.ControlPosition.BOTTOM_CENTER,\n  //         mapTypeIds: [\n  //           maps.MapTypeId.ROADMAP,\n  //           maps.MapTypeId.SATELLITE,\n  //           maps.MapTypeId.HYBRID\n  //         ]\n  //       },\n\n  //       zoomControl: true,\n  //       clickableIcons: false\n  //     };\n  //   };\n\n  render() {\n    return (\n      // Important! Always set the container height explicitly\n      <div style={{ height: \"450px\", width: \"100%\" }} className=\"\">\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: \"AIzaSyDVu7n8GFMljA8sDPmEC24k-0RIjXFVaVo\" }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n          mapTypeId={\"satellite\"}\n          options={this.getMapOptions}\n        >\n          {this.props.sensors.map((sensor, key) => {\n            return (\n              <Marker\n                lat={sensor.lat}\n                lng={sensor.lon}\n                name={sensor.name}\n                color={\"white\"}\n              />\n            );\n          })}\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\nexport default SimpleMap;\n","import React, { Component } from \"react\";\n\nclass ListSensors extends Component {\n  render() {\n    return (\n      <>\n        <br />\n        <h4 className=\"\">Full Sensor List</h4>\n        <div className=\"scroll-me\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Lat</th>\n                <th scope=\"col\">Lon</th>\n                <th scope=\"col\">IoT Endpoint</th>\n                <th scope=\"col\">Owner</th>\n              </tr>\n            </thead>\n            <tbody id=\"sensorList\">\n              {this.props.sensors.map((sensor, key) => {\n                return (\n                  <tr key={key}>\n                    <th scope=\"row\">{sensor.id.toString()}</th>\n                    <td>{sensor.name}</td>\n                    <td>{sensor.lat}</td>\n                    <td>{sensor.lon}</td>\n                    <td>{sensor.endpoint}</td>\n                    <td>{sensor.owner}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ListSensors;\n","import React, { Component } from \"react\";\nimport { SocialIcon } from \"react-social-icons\";\nimport socialIcon from \"react-social-icons/dist/social-icon\";\n\nclass SiteFooter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      teamMembers: [\n        {\n          name: \"Will Willis\",\n          socialLinks: [\"http://github.com/willwillis\"]\n        },\n        { name: \"Mike Ferber\", socialLinks: [\"https://github.com/2auroras\"] },\n\n        {\n          name: \"Brent McMinn\",\n          socialLinks: [\"https://github.com/brentmcminn\"]\n        }\n      ]\n    };\n  }\n  render() {\n    return (\n      <div className=\"pt-5 my-md-5 pt-md-5 border-top footer\">\n        <div className=\"row\">\n          <div className=\"col-6 col-s\">\n            <h5>About</h5>\n            Lassie Disaster Response is a fictitious company. This website was\n            developed for the 3<sup>rd</sup> and final project during the\n            07/2019{\" \"}\n            <a href=\"https://techbootcamps.rice.edu/fintech/\">\n              FinTech Bootcamp\n            </a>{\" \"}\n            at Rice University.\n            <p>\n              <br />\n              <SocialIcon\n                url={\n                  \"https://github.com/willwillis/Disaster-Insurance-Ethereum-dApp\"\n                }\n                label={\"View this project on github\"}\n              />{\" \"}\n              View the code for this project on Github.\n            </p>\n            <p>\n              <div className=\"d-block mb-3 text-muted\">&copy; 2019-2020</div>\n            </p>\n          </div>\n          <div className=\"col-3 col-s\">\n            <h5>Team Members</h5>\n            <ul className=\"list-unstyled text-small\">\n              {this.state.teamMembers.map((boi, key) => {\n                return (\n                  <li>\n                    {boi.name} &nbsp;\n                    {boi.socialLinks.map((link, key) => {\n                      return (\n                        <>\n                          <SocialIcon\n                            url={link}\n                            style={{ height: 25, width: 25 }}\n                          />{\" \"}\n                          &nbsp;\n                        </>\n                      );\n                    })}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n          <div className=\"col-2 col-s\">\n            <h5>Tech Stack</h5>\n            <ul className=\"list-unstyled text-small\">\n              <li>\n                <a className=\"text-muted\" href=\"https://ethereum.org/\">\n                  Ethereum Blockchain\n                </a>\n              </li>\n              <li>\n                <a\n                  className=\"text-muted\"\n                  href=\"https://solidity.readthedocs.io/en/v0.6.1/\"\n                >\n                  Solidity{\" \"}\n                </a>\n              </li>\n              <li>\n                <a className=\"text-muted\" href=\"https://aws.amazon.com/\">\n                  Amazon Web Services\n                </a>\n              </li>\n              <li>\n                <a className=\"text-muted\" href=\"https://reactjs.org/\">\n                  React\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SiteFooter;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nclass Clock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { date: new Date() };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>{this.state.date.toLocaleTimeString()}</h2>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Clock />, document.getElementById(\"root\"));\n\nexport default Clock;\n","import React, { Component } from \"react\";\n\nclass OverrideResponder extends Component {\n  render() {\n    return (\n      <>\n        <h4>Manual Override Responder State</h4>\n        <form\n          onSubmit={event => {\n            event.preventDefault();\n            const newInt = this.responderState.value;\n            console.log(\"new responderstate from form is \" + newInt);\n            this.props.setResponderState(newInt);\n          }}\n        >\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"responderState\"\n              type=\"text\"\n              ref={input => {\n                this.responderState = input;\n              }}\n              className=\"form-control\"\n              placeholder=\"New Responder State\"\n              required\n            />\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Override\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default OverrideResponder;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Web3 from \"web3\";\nimport Lassie from \"../abis/Lassie.json\";\nimport Guage from \"./Guage\";\nimport { Container, Row, Col, Alert, Image } from \"react-bootstrap\";\nimport {\n  contractStateToString,\n  responderStateToString,\n  thresholdToString,\n  thresholdToValue,\n  contractToValue\n} from \"./Utils\";\n\nimport GaugeChart from \"react-gauge-chart\";\n\nclass ReactiveGuages extends Component {\n  async loadWeb3() {\n    // window.alert('loadWeb3')\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    // Load account\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] });\n    const networkId = await web3.eth.net.getId();\n    const networkData = Lassie.networks[networkId];\n    this.setState({ networkID: networkId });\n    const blockNumber = await web3.eth.getBlockNumber();\n    console.log(\"blockNumber: \" + blockNumber);\n    this.setState({ blockNumber });\n    if (networkData) {\n      // window.alert('loadBlockChainData ... networkData is truthy...')\n      const lassie = web3.eth.Contract(Lassie.abi, networkData.address);\n      this.setState({ lassie });\n      const sensorCount = await lassie.methods.sensorCount().call();\n      console.log(sensorCount.toString());\n      this.setState({ sensorCount });\n      for (var i = 1; i <= sensorCount; i++) {\n        const sensor = await lassie.methods.sensors(i).call();\n        this.setState({\n          sensors: [...this.state.sensors, sensor]\n        });\n      }\n      const networkDataAddress = networkData.address;\n      this.setState({ networkDataAddress });\n\n      const contractState = await lassie.methods.contractState().call();\n      this.setState({ contractState });\n\n      const responderState = await lassie.methods.responderState().call();\n      this.setState({ responderState });\n\n      const smokeThresholdBreached = await lassie.methods\n        .smokeThresholdBreached()\n        .call();\n      this.setState({ smokeThresholdBreached });\n\n      const temperatureThresholdBreached = await lassie.methods\n        .temperatureThresholdBreached()\n        .call();\n      this.setState({ temperatureThresholdBreached });\n\n      const name = await lassie.methods.name().call();\n      this.setState({ name });\n\n      console.log(\"Sensors\");\n      console.log(this.state.sensors);\n      console.log(\"contractState\" + this.state.contractState);\n      this.setState({ loading: false });\n    } else {\n      window.alert(\"Lassie contract not deployed to detected network.\");\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      sensorCount: 0,\n      sensors: [],\n      loading: true,\n      blockNumber: \"\",\n      contractState: \"\",\n      responderState: \"\",\n      smokeThreshold: 1,\n      tempThreshold: 150,\n      smokeThresholdBreached: \"\",\n      temperatureThresholdBreached: \"\",\n      name: \"\",\n      networkDataAddress: \"\",\n      networkId: \"\",\n      mapCenter: {\n        lat: -25.2744,\n        lng: 133.7751\n      },\n      date: new Date()\n    };\n\n    // this.createSensor = this.createSensor.bind(this);\n    // this.setResponderState = this.setResponderState.bind(this);\n    // this.setTemp = this.setTemp.bind(this);\n    // this.setSmoke = this.setSmoke.bind(this);\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 3000);\n    console.log(\"Querying contract for updates...\");\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  // moved this logic to AddSensor.js COmponent.\n  createSensor(name, lat, lon, endpoint) {\n    //this.setState({ loading: true });\n    this.state.lassie.methods\n      .createSensor(name, lat, lon, endpoint)\n      .send({ from: this.state.account })\n      .once(\"receipt\", receipt => {\n        this.setState({ loading: false });\n        window.location.reload(true);\n      });\n  }\n\n  setResponderState(newInt) {\n    //this.setState({ loading: true });\n    this.state.lassie.methods\n      .setResponderState(newInt)\n      .send({ from: this.state.account })\n      .once(\"receipt\", receipt => {\n        this.setState({ loading: false });\n      });\n  }\n\n  setSmoke(breachedBool, sensorName) {\n    this.state.lassie.methods\n      .setSmoke(breachedBool, sensorName)\n      .send({ from: this.state.account })\n      .once(\"receipt\", receipt => {\n        this.setState({ loading: false, temperatureThresholdBreached: true });\n      });\n  }\n\n  setTemp(breachedBool, sensorName) {\n    this.state.lassie.methods\n      .setTemperature(breachedBool, sensorName)\n      .send({ from: this.state.account })\n      .once(\"receipt\", receipt => {\n        this.setState({ loading: false, smokeThresholdBreached: true });\n      });\n  }\n\n  tick() {\n    this.loadWeb3();\n    this.loadBlockchainData();\n  }\n\n  render() {\n    return (\n      <div>\n        <>\n          {this.state.loading ? (\n            <div>Loading..</div>\n          ) : (\n            <Alert variant={\"\"}>\n              <Container fluid>\n                <Row>\n                  <Col lg={6}>\n                    <h3 class=\"text-center\">Contract Parties</h3>\n                  </Col>\n                  <Col lg={6} class=\"text-center\">\n                    <h3 class=\"text-center\">Contract Variables</h3>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs={12} lg={3}>\n                    <h5 class=\"text-center\">Lassie Insurance Status</h5>\n                    <GaugeChart\n                      id=\"gauge-chart1\"\n                      nrOfLevels={3}\n                      percent={\n                        contractToValue(this.state.contractState) || 0.15\n                      }\n                      needleColor=\"#345243\"\n                      textColor=\"black\"\n                      formatTextValue={value =>\n                        contractStateToString(this.state.contractState) ||\n                        \"Loading..\"\n                      }\n                      animDelay={500}\n                    />\n                  </Col>\n                  <Col xs={12} lg={3}>\n                    <h5 class=\"text-center\">Fire Defense Co. Status</h5>\n                    <GaugeChart\n                      id=\"gauge-chart2\"\n                      nrOfLevels={3}\n                      percent={\n                        contractToValue(this.state.responderState) || 0.15\n                      }\n                      needleColor=\"#345243\"\n                      textColor=\"black\"\n                      formatTextValue={value =>\n                        responderStateToString(this.state.responderState) ||\n                        \"Loading..\"\n                      }\n                      animDelay={500}\n                    />\n                  </Col>\n\n                  <Col xs={12} lg={3}>\n                    <h5 class=\"text-center\">Smoke Threshold</h5>\n                    <GaugeChart\n                      id=\"gauge-chart3\"\n                      percent={\n                        thresholdToValue(this.state.smokeThresholdBreached) ||\n                        0.15\n                      }\n                      colors={[\"#5BE12C\", \"#F5CD19\", \"#EA4228\"]}\n                      nrOfLevels={2}\n                      textColor=\"black\"\n                      formatTextValue={value =>\n                        thresholdToString(this.state.smokeThresholdBreached) ||\n                        \"Loading...\"\n                      }\n                      animDelay={500}\n                    />\n                  </Col>\n\n                  <Col xs={12} lg={3}>\n                    <h5 class=\"text-center\">Temperature Threshold</h5>\n                    <GaugeChart\n                      id=\"gauge-chart4\"\n                      nrOfLevels={2}\n                      percent={\n                        thresholdToValue(\n                          this.state.temperatureThresholdBreached\n                        ) || 0.15\n                      }\n                      needleColor=\"#345243\"\n                      colors={[\"#5BE12C\", \"#F5CD19\", \"#EA4228\"]}\n                      textColor=\"black\"\n                      formatTextValue={value =>\n                        thresholdToString(\n                          this.state.temperatureThresholdBreached\n                        ) || \"Loading...\"\n                      }\n                      animDelay={500}\n                    />\n                  </Col>\n                </Row>\n              </Container>\n            </Alert>\n          )}\n        </>\n      </div>\n    );\n  }\n}\n\n// ReactDOM.render(\"<div>Hi There</div>\", document.getElementById(\"root\"));\n\nexport default ReactiveGuages;\n","import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport \"./App.css\";\nimport Lassie from \"../abis/Lassie.json\";\nimport Navbar from \"./Navbar\";\nimport About from \"./About\";\nimport Guage from \"./Guage\";\nimport ListTopSensors from \"./ListTopSensors\";\nimport { Row, Col } from \"react-bootstrap\";\nimport AddSensor from \"./AddSensor\";\nimport GMap from \"./GMap\";\nimport ListSensors from \"./ListSensors\";\nimport SiteFooter from \"./SiteFooter\";\nimport { FaNetworkWired } from \"react-icons/fa\";\nimport OverrideResponder from \"./OverrideResponder\";\n// import AppSyncSensor from \"./AppSyncSensor\";\n// import AppSyncSensorDos from \"./AppSyncSensorDos\"; // refactor || die($!)\nimport Clock from \"./Clock\";\nimport ReactiveGuages from \"./ReactiveGuages\";\n\nclass App extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    // window.alert('loadWeb3')\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    // Load account\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] });\n    const networkId = await web3.eth.net.getId();\n    const networkData = Lassie.networks[networkId];\n    this.setState({ networkID: networkId });\n    const blockNumber = await web3.eth.getBlockNumber();\n    console.log(\"blockNumber: \" + blockNumber);\n    this.setState({ blockNumber });\n\n    if (networkData) {\n      // window.alert('loadBlockChainData ... networkData is truthy...')\n      const lassie = web3.eth.Contract(Lassie.abi, networkData.address);\n      this.setState({ lassie });\n      const sensorCount = await lassie.methods.sensorCount().call();\n      console.log(sensorCount.toString());\n      this.setState({ sensorCount });\n      for (var i = 1; i <= sensorCount; i++) {\n        const sensor = await lassie.methods.sensors(i).call();\n        this.setState({\n          sensors: [...this.state.sensors, sensor]\n        });\n      }\n      const networkDataAddress = networkData.address;\n      this.setState({ networkDataAddress });\n\n      //   const transactionCount = await web3.eth.getTransactionCount(\n      //     networkDataAddress\n      //   );\n      //   this.setState({ transactionCount });\n\n      const contractState = await lassie.methods.contractState().call();\n      this.setState({ contractState });\n\n      const responderState = await lassie.methods.responderState().call();\n      this.setState({ responderState });\n\n      const smokeThresholdBreached = await lassie.methods\n        .smokeThresholdBreached()\n        .call();\n      this.setState({ smokeThresholdBreached });\n\n      const temperatureThresholdBreached = await lassie.methods\n        .temperatureThresholdBreached()\n        .call();\n      this.setState({ temperatureThresholdBreached });\n\n      const name = await lassie.methods.name().call();\n      this.setState({ name });\n\n      console.log(\"Sensors\");\n      console.log(this.state.sensors);\n      console.log(\"contractState\" + this.state.contractState);\n      this.setState({ loading: false });\n    } else {\n      window.alert(\"Lassie contract not deployed to detected network.\");\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      sensorCount: 0,\n      sensors: [],\n      loading: true,\n      blockNumber: \"\",\n      contractState: \"\",\n      responderState: \"\",\n      smokeThreshold: 1,\n      tempThreshold: 150,\n      smokeThresholdBreached: \"\",\n      temperatureThresholdBreached: \"\",\n      name: \"\",\n      networkDataAddress: \"\",\n      transactionCount: \"\",\n      networkId: \"\",\n      mapCenter: {\n        lat: -25.2744,\n        lng: 133.7751\n      }\n    };\n\n    this.createSensor = this.createSensor.bind(this);\n    this.setResponderState = this.setResponderState.bind(this);\n    this.setTemp = this.setTemp.bind(this);\n    this.setSmoke = this.setSmoke.bind(this);\n  }\n\n  // moved this logic to AddSensor.js COmponent.\n  createSensor(name, lat, lon, endpoint) {\n    //this.setState({ loading: true });\n    this.state.lassie.methods\n      .createSensor(name, lat, lon, endpoint)\n      .send({ from: this.state.account })\n      .once(\"receipt\", receipt => {\n        this.setState({ loading: false });\n        // window.location.reload(true);\n        window.location.reload();\n      });\n  }\n\n  setResponderState(newInt) {\n    //this.setState({ loading: true });\n    this.state.lassie.methods\n      .setResponderState(newInt)\n      .send({ from: this.state.account })\n      .once(\"receipt\", receipt => {\n        this.setState({ loading: false });\n      });\n  }\n\n  setSmoke(breachedBool, sensorName) {\n    this.state.lassie.methods\n      .setSmoke(breachedBool, sensorName)\n      .send({ from: this.state.account })\n      .once(\"receipt\", receipt => {\n        this.setState({ loading: false, temperatureThresholdBreached: true });\n      });\n  }\n\n  setTemp(breachedBool, sensorName) {\n    this.state.lassie.methods\n      .setTemperature(breachedBool, sensorName)\n      .send({ from: this.state.account })\n      .once(\"receipt\", receipt => {\n        this.setState({ loading: false, smokeThresholdBreached: true });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.loading ? (\n          <div id=\"loader\" className=\"text-center\">\n            <p className=\"text-center align-middle height-100\">\n              <h1 className=\"bigger\">\n                <FaNetworkWired />\n              </h1>\n              <h1>Connecting to Ethereum Network...</h1>\n              <Clock />\n            </p>\n          </div>\n        ) : (\n          <>\n            <Navbar\n              account={this.state.account}\n              networkDataAddress={this.state.networkDataAddress}\n              contractName={this.state.name}\n              networkID={this.state.networkID}\n              blockNumber={this.state.blockNumber}\n              transactionCount={this.transactionCount}\n            />\n            <About contractName={this.state.name} />\n            <Row>\n              <Col xs={12} lg={9}>\n                {/* <Clock /> */}\n                {/* <Guage\n                  contractState={this.state.contractState}\n                  responderState={this.state.responderState}\n                  smokeThresholdBreached={this.state.smokeThresholdBreached}\n                  temperatureThresholdBreached={\n                    this.state.temperatureThresholdBreached\n                  }\n                /> */}\n                <hr />\n                <ReactiveGuages />\n                <hr />\n                <GMap\n                  sensors={this.state.sensors}\n                  center={this.state.mapCenter}\n                  zoom={4}\n                />\n              </Col>\n              <Col xs={12} lg={3} className={\"p-3 mb-2 bg-light text-dark\"}>\n                <Row>\n                  {/* <AppSyncSensor\n\n                  ></AppSyncSensor>\n                  <AppSyncSensorDos\n                    sensorName={\"PiZero\"}\n                    setTemp={this.setTemp}\n                    setSmoke={this.setSmoke}\n                    smokeThresholdBreached={this.state.smokeThresholdBreached}\n                    temperatureThresholdBreached={\n                      this.state.temperatureThresholdBreached\n                    }\n                  ></AppSyncSensorDos> */}\n                </Row>\n                <ListTopSensors\n                  sensors={this.state.sensors.slice(-3).reverse()}\n                />\n                <AddSensor\n                  createSensor={this.createSensor}\n                  sensorName={\"Pi4\"}\n                  setTemp={this.setTemp}\n                  setSmoke={this.setSmoke}\n                  smokeThresholdBreached={this.state.smokeThresholdBreached}\n                  temperatureThresholdBreached={\n                    this.state.temperatureThresholdBreached\n                  }\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                {\" \"}\n                <ListSensors sensors={this.state.sensors} />\n              </Col>\n            </Row>\n            <SiteFooter sensors={this.state.sensors} />\n            <Row>\n              <Col>\n                {\" \"}\n                {/* <OverrideResponder setResponderState={this.setResponderState} /> */}\n              </Col>\n              <Col></Col>\n            </Row>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}